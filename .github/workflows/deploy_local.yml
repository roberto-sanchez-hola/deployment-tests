name: üöÄ Deploy local (dev)

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  deploy-local:
    runs-on: ubuntu-latest
    environment: dev
    env:
      DEV_ADMIN_BDC_PASSWORD: ${{ secrets.DEV_ADMIN_BDC_PASSWORD }}
      DEV_ADMIN_BUNDLEID: ${{ secrets.DEV_ADMIN_BUNDLEID }}
      DEV_ADMIN_BUNDLEIDFA: ${{ secrets.DEV_ADMIN_BUNDLEIDFA }}
      DEV_ADMIN_ECOM_PASSWORD: ${{ secrets.DEV_ADMIN_ECOM_PASSWORD }}
      DEV_ADMIN_IDAQ: ${{ secrets.DEV_ADMIN_IDAQ }}
      DEV_ADMIN_IDAQID: ${{ secrets.DEV_ADMIN_IDAQID }}
      DEV_ADMIN_JOB_OWNER: ${{ secrets.DEV_ADMIN_JOB_OWNER }}
      DEV_ADMIN_OTRS_PASSWORD: ${{ secrets.DEV_ADMIN_OTRS_PASSWORD }}
      DEV_ADMIN_OTRS_USERNAME: ${{ secrets.DEV_ADMIN_OTRS_USERNAME }}
      DEV_ALL_DB_DATABASE: ${{ secrets.DEV_ALL_DB_DATABASE }}
      DEV_ALL_DB_HOSTNAME: ${{ secrets.DEV_ALL_DB_HOSTNAME }}
      DEV_ALL_DB_PASSWORD: ${{ secrets.DEV_ALL_DB_PASSWORD }}
      DEV_ALL_DB_USERNAME: ${{ secrets.DEV_ALL_DB_USERNAME }}
      DEV_ROOT_APIKEY_EV: ${{ secrets.DEV_ROOT_APIKEY_EV }}
      DEV_ROOT_APIKEY_LR: ${{ secrets.DEV_ROOT_APIKEY_LR }}
      DEV_ROOT_APISECR_LR: ${{ secrets.DEV_ROOT_APISECR_LR }}
      DEV_ROOT_BUNDLEID: ${{ secrets.DEV_ROOT_BUNDLEID }}
      DEV_ROOT_BUNDLEIDFA: ${{ secrets.DEV_ROOT_BUNDLEIDFA }}
      DEV_ROOT_HOST_EV: ${{ secrets.DEV_ROOT_HOST_EV }}
      DEV_ROOT_IDAQ: ${{ secrets.DEV_ROOT_IDAQ }}
      DEV_ROOT_IDAQID: ${{ secrets.DEV_ROOT_IDAQID }}
      DEV_ROOT_JOB_OWNER: ${{ secrets.DEV_ROOT_JOB_OWNER }}
      DEV_ADMIN_DIR_APPLICATION: ${{ vars.DEV_ADMIN_DIR_APPLICATION }}
      DEV_ADMIN_DIR_CATALOG: ${{ vars.DEV_ADMIN_DIR_CATALOG }}
      DEV_ADMIN_DIR_FRAS: ${{ vars.DEV_ADMIN_DIR_FRAS }}
      DEV_ADMIN_DIR_LANGUAGE: ${{ vars.DEV_ADMIN_DIR_LANGUAGE }}
      DEV_ADMIN_DIR_TEMPLATE: ${{ vars.DEV_ADMIN_DIR_TEMPLATE }}
      DEV_ADMIN_HTTP_CATALOG: ${{ vars.DEV_ADMIN_HTTP_CATALOG }}
      DEV_ADMIN_HTTP_IMAGE: ${{ vars.DEV_ADMIN_HTTP_IMAGE }}
      DEV_ADMIN_HTTP_SERVER: ${{ vars.DEV_ADMIN_HTTP_SERVER }}
      DEV_ADMIN_HTTPS_CATALOG: ${{ vars.DEV_ADMIN_HTTPS_CATALOG }}
      DEV_ADMIN_HTTPS_IMAGE: ${{ vars.DEV_ADMIN_HTTPS_IMAGE }}
      DEV_ADMIN_HTTPS_SERVER: ${{ vars.DEV_ADMIN_HTTPS_SERVER }}
      DEV_ALL_DB_DRIVER: ${{ vars.DEV_ALL_DB_DRIVER }}
      DEV_ALL_DB_PREFIX: ${{ vars.DEV_ALL_DB_PREFIX }}
      DEV_ALL_DIR_CACHE: ${{ vars.DEV_ALL_DIR_CACHE }}
      DEV_ALL_DIR_CONFIG: ${{ vars.DEV_ALL_DIR_CONFIG }}
      DEV_ALL_DIR_DATABASE: ${{ vars.DEV_ALL_DIR_DATABASE }}
      DEV_ALL_DIR_DOWNLOAD: ${{ vars.DEV_ALL_DIR_DOWNLOAD }}
      DEV_ALL_DIR_IMAGE: ${{ vars.DEV_ALL_DIR_IMAGE }}
      DEV_ALL_DIR_LOGS: ${{ vars.DEV_ALL_DIR_LOGS }}
      DEV_ALL_DIR_SYSTEM: ${{ vars.DEV_ALL_DIR_SYSTEM }}
      DEV_CRM_DIR_APPLICATION: ${{ vars.DEV_CRM_DIR_APPLICATION }}
      DEV_CRM_DIR_CATALOG: ${{ vars.DEV_CRM_DIR_CATALOG }}
      DEV_CRM_DIR_LANGUAGE: ${{ vars.DEV_CRM_DIR_LANGUAGE }}
      DEV_CRM_DIR_TEMPLATE: ${{ vars.DEV_CRM_DIR_TEMPLATE }}
      DEV_CRM_HTTP_CATALOG: ${{ vars.DEV_CRM_HTTP_CATALOG }}
      DEV_CRM_HTTP_IMAGE: ${{ vars.DEV_CRM_HTTP_IMAGE }}
      DEV_CRM_HTTP_SERVER: ${{ vars.DEV_CRM_HTTP_SERVER }}
      DEV_CRM_HTTPS_CATALOG: ${{ vars.DEV_CRM_HTTPS_CATALOG }}
      DEV_CRM_HTTPS_IMAGE: ${{ vars.DEV_CRM_HTTPS_IMAGE }}
      DEV_CRM_HTTPS_SERVER: ${{ vars.DEV_CRM_HTTPS_SERVER }}
      DEV_ROOT_AYUDA_INFO: ${{ vars.DEV_ROOT_AYUDA_INFO }}
      DEV_ROOT_BASICO_URL: ${{ vars.DEV_ROOT_BASICO_URL }}
      DEV_ROOT_DIR_APPLICATION: ${{ vars.DEV_ROOT_DIR_APPLICATION }}
      DEV_ROOT_DIR_LANGUAGE: ${{ vars.DEV_ROOT_DIR_LANGUAGE }}
      DEV_ROOT_DIR_TEMPLATE: ${{ vars.DEV_ROOT_DIR_TEMPLATE }}
      DEV_ROOT_HELP_INFO: ${{ vars.DEV_ROOT_HELP_INFO }}
      DEV_ROOT_HTTP_ADMIN: ${{ vars.DEV_ROOT_HTTP_ADMIN }}
      DEV_ROOT_HTTP_IMAGE: ${{ vars.DEV_ROOT_HTTP_IMAGE }}
      DEV_ROOT_HTTP_SERVER: ${{ vars.DEV_ROOT_HTTP_SERVER }}
      DEV_ROOT_HTTPS_IMAGE: ${{ vars.DEV_ROOT_HTTPS_IMAGE }}
      DEV_ROOT_HTTPS_SERVER: ${{ vars.DEV_ROOT_HTTPS_SERVER }}
      DEV_ROOT_LOGOUT_EV: ${{ vars.DEV_ROOT_LOGOUT_EV }}
      DEV_ROOT_LOGOUT_LR: ${{ vars.DEV_ROOT_LOGOUT_LR }}
      DEV_ROOT_PREMIUM_URL: ${{ vars.DEV_ROOT_PREMIUM_URL }}
      DEV_ROOT_PSW_LR: ${{ vars.DEV_ROOT_PSW_LR }}
      DEV_ROOT_USER_AREA_EV: ${{ vars.DEV_ROOT_USER_AREA_EV }}
      DEV_ROOT_USER_AREA_LR: ${{ vars.DEV_ROOT_USER_AREA_LR }}
      DEV_ROOT_VERIFICATION_LR: ${{ vars.DEV_ROOT_VERIFICATION_LR }}
      DEV_ROOT_VERSION_DIGITAL: ${{ vars.DEV_ROOT_VERSION_DIGITAL }}

    steps:
      - name: üì• Checkout del c√≥digo
        uses: actions/checkout@v4
      - name: Create temporary .env FILE
        run: |
          echo "" > "$GITHUB_WORKSPACE/secrets.env"
          printenv | grep ^DEV_ >> "$GITHUB_WORKSPACE/secrets.env" || true

      - name: üõ†Ô∏è Generate config.php files
        run: |
         
          
          mkdir -p admin crm
          echo "<?php" > config.php
          echo "<?php" > admin/config.php
          echo "<?php" > crm/config.php

          while IFS='=' read -r key value; do
            [[ -z "$key" || "$key" == \#* ]] && continue
            IFS='_' read -r env context name <<< "$key"
            const="${key#${env}_${context}_}"

            case "$context" in
              ROOT)
                echo "define('${const}', '${value}');" >> config.php
                ;;
              ADMIN)
                echo "define('${const}', '${value}');" >> admin/config.php
                ;;
              CRM)
                echo "define('${const}', '${value}');" >> crm/config.php
                ;;
              ALL)
                echo "define('${const}', '${value}');" >> config.php
                echo "define('${const}', '${value}');" >> admin/config.php
                echo "define('${const}', '${value}');" >> crm/config.php
                ;;
            esac
          done < "$GITHUB_WORKSPACE/secrets.env"

      - name: üßæ Mostrar contenido de los archivos config generados
        run: |
          echo "üßæ config.php (ROOT)"
          cat config.php || echo "‚ùå No encontrado"
          echo ""
          echo "üßæ admin/config.php (ADMIN)"
          cat admin/config.php || echo "‚ùå No encontrado"
          echo ""
          echo "üßæ crm/config.php (CRM)"
          cat crm/config.php || echo "‚ùå No encontrado"
          cat $GITHUB_WORKSPACE/secrets.env

      - name: üìÇ Verifica contenido antes de subir
        run: |
          echo "Contenido de secrets.env:"
          cat $GITHUB_WORKSPACE/secrets.env || echo "‚ùå secrets.env no existe"

          echo "Archivos disponibles:"
          ls -l

      - name: üì§ Subir secrets.env como artefacto
        uses: actions/upload-artifact@v4
        with:
          name: deploy-outputs
          path: .